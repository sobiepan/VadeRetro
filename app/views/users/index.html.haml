%h2= t('activerecord.models.user.other')

%p= link_to((t :new), new_user_path, :class => 'links')

- @vendors.each do |v|
  - next unless v.users.existing.any?
  %h3= v.name
  %table
    %tr
      %th{ :style => 'width:180px' }
      %th{ :style => 'width:150px' }= User.human_attribute_name(:title)
      %th{ :style => 'width:150px' }= User.human_attribute_name(:role)
      %th{ :style => 'width:100px' }= User.human_attribute_name(:color)
      %th{ :style => 'width:100px' }= User.human_attribute_name(:language)
      %th
    - v.users.existing.order(:role_weight).each do |u|
      - role = u.role
      %tr
        %td
          - if role.weight >= @current_user.role.weight
            = link_to u.login, edit_user_path(u), :class => "list_item"
          - else
            = u.login
        %td= u.title
        %td= u.role.name
        %td= get_colors[u.color]
        %td= SalorHospitality::Application::LANGUAGES[u.language]
        %td
          - if role.weight >= @current_user.role.weight
            = link_to t("activerecord.models.user_login.other"), user_path(u), :class => "list_item"
        %td
          - if role.weight >= @current_user.role.weight
            = link_to image_tag('button_small_delete.png', :title => User.human_attribute_name(:hidden), :alt => User.human_attribute_name(:hidden)), user_path(u), :method => :delete, :confirm => t(:are_you_sure)

%br
%br
%br

%h2= t("activerecord.models.user_login.other")
- @vendors.each do |v|
  - next unless v.users.existing.any?
  %h3= v.name
  - v.users.existing.order(:role_weight).each do |u|
    - role = u.role
    
    - user_logins = u.user_logins.where(:created_at => Time.now.beginning_of_day..Time.now)
    - if u.track_time and user_logins.any?
      %h4= u.login
      = render :partial => "logins_table", :locals => { :user_logins => user_logins, :user => u, :last_login => u.user_logins.last }
     
